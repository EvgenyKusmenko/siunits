/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.siunits;

/**
 * This grammar defines SIUnits such as m, km, km^2 or m*deg/(h^2*mg)
*/

component grammar SIUnits extends de.monticore.literals.MCCommonLiterals {

    // Every SIUnit is either a dimensionless unit such as deg or a SIUnitExpression
    SIUnit =
        SiUnitDimensionless | SIUnitExpression;

    /** The SIUnitExpression describes a expression containing SIUnitBasics as primitives
            so that every combination of '*', '/', '^x' and '()' is possible
    */
    interface SIUnitExpression;

    /** The SIUnitBasics are the primitives of the SIUnitExpressions and contains
            the basic SI units without prefixes such as 'm', 's' or 'kg' as well as the
            basic SI units with prefixes such as 'km', 'mm' or 'ms'.
            Other derived or officialy accepted units are also contained ('h', 'day', 'Ohm', ...)
    */
    interface SIUnitBasic extends SIUnitExpression =
        unit:Name;

    SIUnitMultExpression implements SIUnitExpression =
        left:SIUnitExpression "*" right:SIUnitExpression;

    SIUnitDivExpression implements SIUnitExpression =
        left:SIUnitExpression "/" right:SIUnitExpression;

    SIUnitExponentExpression implements SIUnitExpression =
        expression:SIUnitExpression "^" exponent:SignedNatLiteral;

    SIUnitBracketExpression implements SIUnitExpression =
        "(" expression:SIUnit ")";

    // see https://en.wikipedia.org/wiki/Metric_prefix
    // see https://en.wikipedia.org/wiki/SI_base_unit
    // see https://en.wikipedia.org/wiki/SI_derived_unit
    UnitBaseDimWithPrefix implements SIUnitBasic =
        { _input.LT(1).getText().matches("(Y|Z|E|P|T|G|M|K|k|H|da|d|c|m|n|p|f|a|z|y)?(m|g|s|A|K|mol|cd|Hz|N|Pa|J|W|C|V|F|Ohm|S|Wb|T|H|lm|lx|Bq|Gy|Sv|kat)") }?
        unit:Name;

    // see https://en.wikipedia.org/wiki/Non-SI_units_mentioned_in_the_SI
    OfficallyAcceptedUnit implements SIUnitBasic =
        { _input.LT(1).getText().matches("min|h|day|ha|l|L|t|au|Au|Np|B|db|eV|u") }?
        unit:Name;

    Degree implements SIUnitBasic =
//        key("°") { next("C|F|K") }? unit:Name;
        { _input.LT(1).getText().matches("°") }? unit:Name;


    // see https://en.wikipedia.org/wiki/SI_derived_unit
    SiUnitDimensionless implements SIUnitBasic =
        { _input.LT(1).getText().matches("deg|rad|sr") }?
        unit:Name;
}
